<div xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://hl7.org/fhir ../../input-cache/schemas/R5/fhir-single.xsd">
<a name="contents"> </a>
<h3>Change Set Contents</h3>
<p>
Change Sets are intended to be a lightweight, incremental distribution that is a more agile alternative to a full distribution for a given terminology. As such, their contents are expected to be revisions to the concepts within a Terminology, and not a substantial update to the structure or operation of a Terminology. The primary substance of a Change Set is expected to be contained within the <code>CodeSystem.concept</code> structure of of Change Set CodeSystem resource. Additionally, while the following elements may be included in a Change Set, they should match the values present in the corresponding baseline of the Terminology from which the Change Set was derived:
<ul>
	<li>
	<code>CodeSystem.caseSensitive</code>
	</li>
	<li>
	<code>CodeSystem.hierarchyMeaning</code>
	</li>
	<li>
	<code>CodeSystem.compositional</code>
	</li>
	<li>
	<code>CodeSystem.property</code> - note that only properties relevant to content within the Change Set may be included, but those properties should be a subset of properties defined in the corresponding baseline of the Terminology from which the Change Set was derived (i.e., no net-new properties should be defined via a Change Set).
	</li>
</ul>
</p>
<a name="receivingsystems"> </a>
<h3>How receiving systems should operate in the presence of a Change Set</h3>
<p>
The intent of Terminology Change Sets is that they are used as a communication pathway between systems, utilizing the CodeSystem resource. Systems involved in this exchange will intake a Change Set and receive it and process it, and should have a process to store and maintain the contents of the Change Set. Our expectation is that a Terminology Change Set is a transmission format, much like downloads of content available from RxNorm and SNOMED International. It is not necessarily expected that systems involved in Change Set exchange will re-publish the Change Set content in their own FHIR API, but it is rather an ingestion pathway for a system’s terminology server. If a system decides that it would be valuable to re-publish the contents of the Change Set, then they could do that and would need to maintain a process for reconciling Change Sets received from multiple sources.
</p>
<p>
Additional considerations for receiving systems operating in the presence of a Change Set include the following subsections.
</p>
<a name="persistence"> </a>
<h4>Persistence of Change Set as a Separate Object vs. Integration</h4>
<ul>
	<li>
	<b>Separate Object:</b> If the Change Set is persisted as a separate object, it allows for easier tracking and management of changes over time without altering the original CodeSystem. This approach can be useful for maintaining historical data for audit purposes or for scenarios where changes need to be reviewed or approved before being applied.
	</li>
	<li>
	<b>Integration into CodeSystem:</b> Integrating the Change Set directly into the CodeSystem simplifies the management by ensuring that there is only one up-to-date version of each CodeSystem. However, this can complicate rollback and audit processes since the original state is overwritten.
	</li>
</ul>
<a name="operations"> </a>
<h4>Operational Changes with persisted Change Sets</h4>
<ul>
	<li>
	When a client application performs a lookup operation (e.g., $lookup), it should ideally check the Change Set first to see if there has been a recent update relevant to the query. If no relevant change is found in the Change Set, then the lookup should proceed to check the main CodeSystem. This ensures that the most current data is used.
	</li>
</ul>
<a name="managingrevisions"> </a>
<h4>Managing Terminology Revisisions via Change Sets</h4>
<p>
It could be possible to manage the evolution of Terminology as a series of persisted Change Sets, but that use case for Change Sets was not considered as part of development of this guide.
</p>
<a name="persistenceapproach"> </a>
<h4>Recommended approach when persisting Change Sets</h4>
<p>
Maintaining Change Sets separately while developing robust mechanisms to integrate these changes into the Source CodeSystem as needed is advisable. This approach offers flexibility in managing changes and ensures data integrity while simplifying rollback and version control processes.
</p>
<a name="extending"> </a>
<h3>Extending Terminologies</h3>
<p>
One potential use case for Terminology Change Sets is for sharing locally extended versions of Terminologies. Some examples of such extensions include the US Department of Veterans Affairs extending SNOMED to include findings and procedures unique to war veteran treatment, and the US Association of Public Health Laboratories extending LOINC to support COVID test data quality initiatives.
</p>
<p>
While use cases do exist to justify such extensions, implementers are strongly cautioned not to author and distribute such extensions without first exhausting pathways for updates to the source terminology through the SDO that maintains it. Most SDOs maintain new term submission pathways that are well maintained and promptly serviced (see: <a href="https://www.snomed.org/change-or-add">SNOMED process</a>, <a href="https://loinc.org/submissions/">LOINC process</a>, <a href="https://confluence.hl7.org/display/VMAH/Vocabulary+Maintenance+at+HL7">HL7 process</a>), and such pathways should be the preferred process for implementers when new concepts are needed from a terminology.
</p>
<p>
When implementers determine that they are interested in extending a terminology, wherever possible, they should do so in alignment with the authoring guidelines and terms of use for the terminology they are extending. While SNOMED has a robust methodology allowing for the authoring, distribution, and maintenance of extensions, most other terminologies do not. Implementers developing and maintaining extensions should ensure they have a strategy for clearly identifying extended CodeSystem resources utilizing the following elements:
<ul>
	<li>
	<code>CodeSystem.url</code> – where not specified by an SDO-specific policy (such as SNOMED’s extension process) locally-maintained extensions should include a url clearly identifying the extension as published under the implementer’s authority, and not the SDO.
	</li>
	<li>
	<code>CodeSystem.version</code> – where not specified by an SDO-specific policy, it is recommended that implementers consider aligning to <a href="https://terminology.hl7.org/index.html#identificaton-of-versions">HL7 terminology versioning approach</a>
	</li>
	<li>
	<code>CodeSystem.name</code> – locally-maintained extensions should contain a computer-friendly name (consist with <a href="https://hl7.org/fhir/R4/codesystem.html#invs">cnl-0</a>) clearly identifying the CodeSystem resource as a Change Set and ideally conveying both the source terminology from which it was derived and a notion of its contents.
	</li>
	<li>
	<code>CodeSystem.title</code> – locally-maintained extensions should contain a human-friendly name clearly identifying the CodeSystem resource as a Change Set and ideally conveying both the source terminology from which it was derived and a notion of its contents.
	</li>
	<li>
	<code>CodeSystem.description</code> – locally-maintained extensions should utilize the description element to provide a more robust inventory of the contents of the Change Set.
	</li>
</ul>
</p>
<a name="codesystem-properties"> </a>
<h3>CodeSystem Properties</h3>
<p>
Within a FHIR representation, a CodeSystem's properties are perhaps the most important structure for defining the terminology-specific semantics for the concepts in that CodeSystem. Given the broad variation of semantics adopted across terminologies, FHIR has a flexible design for representing properties (see: <a href="https://hl7.org/fhir/R4/codesystem.html#properties">https://hl7.org/fhir/R4/codesystem.html#properties</a>), but that flexibility can lead to inconsistency of implementation without clear guidance for representation of terminology-specific properties.
</p>
<p>
To address this issue, HL7 has developed guidance for properties on its terminology-specific sub pages under the <a href="https://terminology.hl7.org/external_terminologies.html">External Code Systems page</a> within HL7's Terminology publication. On the "Use with HL7 Standards" tab, the far right column of the displayed table ("Use with HL7 Standards") contains links to terminology specific pages where guidance on properties is present. Below are direct links to several commonly used terminologies in the US:
</p>
<ul>
	<li>
		<a href="https://terminology.hl7.org/SNOMEDCT.html#snomed-ct-properties">SNOMED CT Properties</a>
	</li>
	<li>
		<a href="https://terminology.hl7.org/RxNorm.html#rxnorm-properties">RxNorm Properties</a>
	</li>
	<li>
		<a href="https://terminology.hl7.org/LOINC.html#loinc-properties">LOINC Properties</a>
	</li>
</ul>
<p>
These pages are works in progress, and have varying levels of completeness, but should be referenced as the most robust source for guidance on terminology-specific properties, until such time as similar guidance is available directly from the maintainers of these external code systems.
</p>
<a name="patch"> </a>
<h3>Use of PATCH with Change Sets</h3>
<p>
In addition to distribution of incremental terminology updates utilizing a terminology Change Set, implementers of FHIR Terminology Servers could repackage the changes from the change set as a patch document and perform a <a href="https://hl7.org/fhir/R4/http.html#patch">PATCH operation</a> to update an entire CodeSystem resource. This can be useful when a server is seeking to minimize its bandwidth utilization, or in scenarios where a client has only partial access or support for a resource. The server shall process its own copy of the resource in the format indicated, applying the operations specified in the document, following the relevant PATCH specification. While this use case is not a focus of this FHIR IG, we acknowledge that a PATCH transaction could be used to update a FHIR Terminology Server’s representation of a given Terminology.
</p>
</div>
